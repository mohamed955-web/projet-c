#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#pragma warning(disable:4996)
typedef enum { MAX_ETUDIANTS = 100, NB_LETTRE_MAX = 30,NB_MAX_ABS = 80} Enregister;

typedef struct {
    char nom[NB_LETTRE_MAX];
    int groupe;
} Etudiant;

typedef struct {
    int nm_etudiant;
    int date;
    char demi_journee[3];
} absence;

void Commande1(Etudiant etudiants[], int* nm_etudiants, char* nom, int groupe) {
    int trouver= 0;
    for (int i = 0; i < *nm_etudiants; i++) {
        if (strcmp(etudiants[i].nom, nom) == 0 && etudiants[i].groupe == groupe) {
            trouver= 1;
            break;
        }
    }

    if (trouver) {
        printf("Nom incorrect\n");
    }
    else {
        strcpy(etudiants[*nm_etudiants].nom, nom);
        etudiants[*nm_etudiants].groupe = groupe;
        (*nm_etudiants)++;
        printf("Inscription enregistree (%d)\n", *nm_etudiants);
        printf("(%d) %s %d\n", *nm_etudiants, nom, groupe);
    }
}

int trouver_absence(absence tabAbs[], int nb_absences, int nm_etudiant, int date, const char demi_journee[3]) {
    for (int i = 0; i < nb_absences; i++) {
        if (strcmp(tabAbs[i].demi_journee, demi_journee) == 0 && tabAbs[i].nm_etudiant == nm_etudiant && tabAbs[i].date == date) {
            return 1; // Absence trouvée
        }
    }
    return 0; // Absence non trouvée
}

void AbsenceEnregistrer(absence tabAbs[], int* nb_absences, int nm_etudiant, int date, const char demi_journee[3]) {
    if (strcmp(demi_journee, "am") != 0 && strcmp(demi_journee, "pm") != 0) {
        printf("Demi-journee incorrecte\n");
    }
    else if (nm_etudiant <= 0 || nm_etudiant > 100) {
        printf("Identifiant incorrect\n");
    }
    else if (date <= 0 || date > 40) {
        printf("Date incorrecte\n");
    }
    else if (trouver_absence(tabAbs, *nb_absences, nm_etudiant, date, demi_journee) == 1) {
        printf("Absence deja connue\n");
    }
    else {
        if (*nb_absences < NB_MAX_ABS) {
            tabAbs[*nb_absences].nm_etudiant = nm_etudiant;
            tabAbs[*nb_absences].date = date;
            strcpy(tabAbs[*nb_absences].demi_journee, demi_journee);
            (*nb_absences)++;
            printf("Absence enregistree [%d]\n", *nb_absences);
        }
    }
}

int main() {
    Etudiant etudiants[MAX_ETUDIANTS];
    absence tabAbs[NB_MAX_ABS];
    int nm_etudiants = 0, nb_absences = 0;
    char nom[NB_LETTRE_MAX];
    int groupe, nm_etudiant, date;
    char demi_journee[3];
    char cde[31] = "";

    do {
        scanf("%s", cde);
        if (strcmp(cde, "inscription") == 0) {
            scanf("%s %d", nom, &groupe);
            Commande1(etudiants, &nm_etudiants, nom, groupe);
        }
        else if (strcmp(cde, "absence") == 0) {
            scanf("%d %d %s", &nm_etudiant, &date, demi_journee);
            AbsenceEnregistrer(tabAbs, &nb_absences, nm_etudiant, date, demi_journee);
        }
    } while (strcmp(cde, "exit") != 0);

    return 0;
}
