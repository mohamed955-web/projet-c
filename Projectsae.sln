#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#pragma warning(disable:4996)

typedef enum { MAX_ETUDIANTS = 100, NB_LETTRE_MAX = 30 } Enregister;

typedef struct {
    char nom[NB_LETTRE_MAX];
    int groupe;
} Etudiant;

Etudiant etudiants[MAX_ETUDIANTS];
int nm_etudiants = 0;

int trouver_etudiant(char* nom, int groupe) {
    for (int i = 0; i < MAX_ETUDIANTS; i++) {
        if (strcmp(etudiants[i].nom, nom) == 0 && etudiants[i].groupe == groupe) {
            return 1;
        }
    }
    return 0;
}

void Commande1(char* nom, int groupe) {
    if (trouver_etudiant(nom, groupe) == 1) {
        printf("Nom incorrect\n");
    }
    else {
        strcpy(etudiants[nm_etudiants].nom, nom);
        etudiants[nm_etudiants].groupe = groupe;
        nm_etudiants++;
        printf("Inscription enregistree (%d)\n", nm_etudiants);
        printf("(%d) %s %d\n", nm_etudiants, nom, groupe );
    }
}


enum { NB_MAX_ABS = 80, TAILLE_DEMI_JOURNEE = 3 };


typedef struct {
    int nm_etudiant;
    int date;
    char demi_journee[TAILLE_DEMI_JOURNEE];
} absence;
char* demi_journee[TAILLE_DEMI_JOURNEE] = { "am", "pm" };
absence tabAbs[NB_MAX_ABS];
int nb_absences = 0;

int trouver_absence(int nm_etudiant, int date, const char demi_journee[3]) {
    for (int i = 0; i < NB_MAX_ABS; i++) {
        if (strcmp(tabAbs[i].demi_journee, demi_journee) == 0 && tabAbs[i].nm_etudiant == nm_etudiant && tabAbs[i].date == date) {
            return 0;
        }
        else
            return 1;
    }
    
}
absence AbsenceEnregistrer(int nm_etudiant, int date, const char demi_journee[3]) {

    if (strcmp(demi_journee, "am") != 0 && strcmp(demi_journee, "pm") != 0) {
        printf("Demi-journee incorrecte\n");
    }
    else if (nm_etudiant <= 0 || nm_etudiant > 100) {
        printf("Identifiant incorrect\n");
    }
    else if (date <= 0 || date > 40) {
        printf("Date incorrecte\n");
    }
    else if (trouver_absence(nm_etudiants, date, demi_journee) == 1) {
        printf("Absence deja connue\n");
    }
    else {
        if (nb_absences < NB_MAX_ABS) {
            tabAbs[nb_absences].nm_etudiant = nm_etudiant;
            tabAbs[nb_absences].date = date;
            strcpy(tabAbs[nb_absences].demi_journee, demi_journee);
            nb_absences++;
            printf("Absence enregistree [%d]\n", nb_absences);
        }
    }
}
//C3

void liste_etudiant(const char etudiants[], int date_jusquici, int nm_etudiant) {

    if (nm_etudiant <= 0 || nm_etudiant > 100) {
        printf("Aucun inscrit\n");
        return nm_etudiant;
    }
   





}
int main() {
    char nom[NB_LETTRE_MAX];
    int groupe, nm_etudiant, date;
    char demi_journee[3];
    char cde[31] = "";

    do {
        scanf("%s", cde);
        if (strcmp(cde, "inscription") == 0) {
            scanf("%s %d", nom, &groupe);
            Commande1(nom, groupe);
        }
        else if (strcmp(cde, "absence") == 0) {
            scanf("%d %d %s", &nm_etudiant, &date, demi_journee);
            AbsenceEnregistrer(nm_etudiant, date, demi_journee);
        }
    } while (strcmp(cde, "exit") != 0);

}
